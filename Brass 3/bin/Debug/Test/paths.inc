; ==================================================================================================
; PATHS.INC - Motion paths for enemies.
; ==================================================================================================

;A brief explanation of decompression system:
;To save bytes, Joe P gave me the idea used below.
;Instead of saving every position in the table, only the first position is saved.
;From there, each byte signifies an X,Y change. For example, $11 moves the
;enemy 1 right and 1 down. $24 would move it 2 across and 4 down.
;To signify a negative, the most significant bit of the nibble is set high.
;In other words, 8 is added :). So $93 would move the ship left 1 and 3 down.
;This method saved 506 bytes in total (decompression routine included!) With
;more attack patterns, the gain in space would become more apparant.
;The tool in the Paths editor can be used to compress paths.


Path_TOC:
.dw Sin_Wave			; Path #1
.dw Loop			; Path #2
.dw In_Cross_Out		; Path #3
.dw In_From_Left		; Path #4
.dw In_Wiggle_Out	   	; Path #5

Sin_Wave:
;Steps:
.db 73
;Start:
.db -8,12
;Path:
.db $14 ;<-(1,4)
.db $13 ;<-(1,3)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $15 ;<-(1,5)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $15 ;<-(1,5)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $13 ;<-(1,3)
.db $14 ;<-(1,4)
.db $12 ;<-(1,2)
.db $13 ;<-(1,3)
.db $12 ;<-(1,2)
.db $12 ;<-(1,2)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $10 ;<-(1,0)
.db $10 ;<-(1,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $1A ;<-(1,-2)
.db $1A ;<-(1,-2)
.db $1B ;<-(1,-3)
.db $1B ;<-(1,-3)
.db $1C ;<-(1,-4)
.db $1B ;<-(1,-3)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1D ;<-(1,-5)
.db $1C ;<-(1,-4)
.db $1D ;<-(1,-5)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1C ;<-(1,-4)
.db $1B ;<-(1,-3)
.db $1B ;<-(1,-3)
.db $1B ;<-(1,-3)
.db $1A ;<-(1,-2)
.db $1A ;<-(1,-2)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $10 ;<-(1,0)
.db $10 ;<-(1,0)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $12 ;<-(1,2)
.db $12 ;<-(1,2)
.db $13 ;<-(1,3)
.db $13 ;<-(1,3)
.db $13 ;<-(1,3)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $14 ;<-(1,4)
.db $15 ;<-(1,5)
.db $14 ;<-(1,4)


Loop:
;Steps:
.db 118
;Start:
.db -8,65
;Path:
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $21 ;<-(2,1)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $30 ;<-(3,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $29 ;<-(2,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $A9 ;<-(-2,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $A9 ;<-(-2,-1)
.db $A0 ;<-(-2,0)
.db $99 ;<-(-1,-1)
.db $A9 ;<-(-2,-1)
.db $99 ;<-(-1,-1)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $A0 ;<-(-2,0)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $92 ;<-(-1,2)
.db $91 ;<-(-1,1)
.db $92 ;<-(-1,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $21 ;<-(2,1)
.db $21 ;<-(2,1)
.db $11 ;<-(1,1)
.db $21 ;<-(2,1)
.db $20 ;<-(2,0)
.db $11 ;<-(1,1)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $2A ;<-(2,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $2A ;<-(2,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)


In_Cross_Out:
;Steps:
.db 133
;Start:
.db -8,69
;Path:
.db $1B ;<-(1,-3)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $29 ;<-(2,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $2A ;<-(2,-2)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $29 ;<-(2,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $20 ;<-(2,0)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $29 ;<-(2,-1)
.db $20 ;<-(2,0)
.db $1A ;<-(1,-2)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $21 ;<-(2,1)
.db $20 ;<-(2,0)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $20 ;<-(2,0)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $92 ;<-(-1,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $91 ;<-(-1,1)
.db $92 ;<-(-1,2)
.db $A0 ;<-(-2,0)
.db $A1 ;<-(-2,1)
.db $A0 ;<-(-2,0)
.db $91 ;<-(-1,1)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $A0 ;<-(-2,0)
.db $99 ;<-(-1,-1)
.db $A0 ;<-(-2,0)
.db $99 ;<-(-1,-1)
.db $A0 ;<-(-2,0)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $9A ;<-(-1,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $9A ;<-(-1,-2)
.db $9A ;<-(-1,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)



In_From_Left:
;Steps:
.db 98
;Start:
.db 4,0
;Path:
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $12 ;<-(1,2)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $12 ;<-(1,2)
.db $21 ;<-(2,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $0A ;<-(0,-2)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $2A ;<-(2,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $20 ;<-(2,0)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)


In_Wiggle_Out:
;Steps:
.db 141
;Start:
.db 11,0
;Path:
.db $01 ;<-(0,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $91 ;<-(-1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $92 ;<-(-1,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $20 ;<-(2,0)
.db $29 ;<-(2,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $29 ;<-(2,-1)
.db $20 ;<-(2,0)
.db $11 ;<-(1,1)
.db $20 ;<-(2,0)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $02 ;<-(0,2)
.db $11 ;<-(1,1)
.db $12 ;<-(1,2)
.db $20 ;<-(2,0)
.db $11 ;<-(1,1)
.db $11 ;<-(1,1)
.db $20 ;<-(2,0)
.db $20 ;<-(2,0)
.db $29 ;<-(2,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $19 ;<-(1,-1)
.db $1A ;<-(1,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $1A ;<-(1,-2)
.db $0A ;<-(0,-2)
.db $19 ;<-(1,-1)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0C ;<-(0,-4)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $9A ;<-(-1,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $9A ;<-(-1,-2)
.db $A9 ;<-(-2,-1)
.db $A9 ;<-(-2,-1)
.db $99 ;<-(-1,-1)
.db $A9 ;<-(-2,-1)
.db $99 ;<-(-1,-1)
.db $9A ;<-(-1,-2)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $99 ;<-(-1,-1)
.db $0A ;<-(0,-2)
.db $99 ;<-(-1,-1)
.db $9A ;<-(-1,-2)




; ==================================================================================================
; Enable a path - in = a (number of path, starting from #1)
; ==================================================================================================

Enable_Path:
	ld l,a
	ld h,0
	add hl,hl
	ld de,Path_Toc-2
	add hl,de
	push hl
	pop ix
	ld b,(ix+1)
	ld c,(ix+0)	 ;BC = ptr to path details in RAM.
	ld a,(bc)
	ld (Path_Progress),a

	ld d,a		  ;d = number of steps in path.
	
	
	inc bc
	push bc
	pop hl

	
	ld ix,AppBackupScreen   ;Saferam area to decompress into.
	
	ld a,(hl)
	ld (ix+0),a
	inc hl
	ld a,(hl)
	ld (ix+1),a

	;At top of AppBackupScreen now sits the starting positions for the enemy ships.
	
Next_Path_Position:
	inc hl	;...and HL.



	ld b,(ix+1)	;b = y value.
	ld a,(hl)
	and %00001111	;Get Y change from table.

	bit 3,a
	jr z,Add_to_Y

	and %00000111
	ld e,a
	ld a,b
	sub e
	jr Set_Y_Path
	

Add_to_Y:
	add a,b
Set_Y_Path:
	ld (ix+3),a	;Set next Y value

	;Now, do the same (nearly!) for the X value.
	
	ld b,(ix+0)	;b = x value.
	ld a,(hl)
	and %11110000	;Get x change from table.
	sra a
	sra a
	sra a
	sra a		;Shift!

	bit 3,a
	jr z,Add_to_X

	and %00000111
	ld e,a
	ld a,b
	sub e
	jr Set_X_Path
	

Add_to_X:
	add a,b
Set_X_Path:
	ld (ix+2),a	;Set next x value

	inc ix	
	inc ix

	dec d
	ld a,d
	or a
	jr nz,Next_Path_Position
	
	ld bc,AppBackupScreen	
	ld (Path_Pointer),bc

	ld ix,Enemies

	ld b,0
	ld a,Num_Enemies

Reset_Enemies_Loop:


	ld (ix+2),2
	ld (ix+3),b

	ld l,a

	ld a,b
	sub 8
	ld b,a

	ld a,l
	
	inc ix
	inc ix
	inc ix
	inc ix

	dec a
	or a
	jr nz,Reset_Enemies_Loop

	
	ret
