//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PindurTI.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Default key mapping
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Default key mapping")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"18;2nd|112;y=|113;window|114;zoom|115;trace|116;graph|27;mode|20;alpha|8;del|46;del|187;stat|117;math|118;apps|119;prgm|120;vars|34;clear|35;x^-1|45;sin|36;cos|33;tan|144;^|186;x^2|219;(|221;)|192;x|226;ln|9;sto|145;on|48;0|49;1|50;2|51;3|52;4|53;5|54;6|55;7|56;8|57;9|38;up|40;down|37;left|39;right|13;enter|65;math|66;apps|67;prgm|68;x^-1|69;sin|70;cos|71;tan|72;^|73;x^2|74;,|75;(|76;)|77;/|78;log|79;7|80;8|81;9|82;*|83;ln|84;4|85;5|86;6|87;-|88;sto|89;1|90;2|32;0|96;0|97;1|98;2|99;3|100;4|101;5|102;6|103;7|104;8|105;9|188;,|190;.|222;log|110;.|107;+|109;-|106;*|111;/|191;/|189;-")]
        public string KeyMap {
            get {
                return ((string)(this["KeyMap"]));
            }
            set {
                this["KeyMap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("204, 224, 207")]
        public global::System.Drawing.Color BrightColour {
            get {
                return ((global::System.Drawing.Color)(this["BrightColour"]));
            }
            set {
                this["BrightColour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("48, 48, 48")]
        public global::System.Drawing.Color DarkColour {
            get {
                return ((global::System.Drawing.Color)(this["DarkColour"]));
            }
            set {
                this["DarkColour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int VideoMode {
            get {
                return ((int)(this["VideoMode"]));
            }
            set {
                this["VideoMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2, 2")]
        public global::System.Drawing.Point KeypadPos {
            get {
                return ((global::System.Drawing.Point)(this["KeypadPos"]));
            }
            set {
                this["KeypadPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool KeypadVisible {
            get {
                return ((bool)(this["KeypadVisible"]));
            }
            set {
                this["KeypadVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("177, 311")]
        public global::System.Drawing.Point CalcWindowPos {
            get {
                return ((global::System.Drawing.Point)(this["CalcWindowPos"]));
            }
            set {
                this["CalcWindowPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("569, 623")]
        public global::System.Drawing.Size CalcWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["CalcWindowSize"]));
            }
            set {
                this["CalcWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("248, 224")]
        public global::System.Drawing.Point MemoryPos {
            get {
                return ((global::System.Drawing.Point)(this["MemoryPos"]));
            }
            set {
                this["MemoryPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("300, 166")]
        public global::System.Drawing.Size MemorySize {
            get {
                return ((global::System.Drawing.Size)(this["MemorySize"]));
            }
            set {
                this["MemorySize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MemoryVisible {
            get {
                return ((bool)(this["MemoryVisible"]));
            }
            set {
                this["MemoryVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("179, 85")]
        public global::System.Drawing.Point RegistersPos {
            get {
                return ((global::System.Drawing.Point)(this["RegistersPos"]));
            }
            set {
                this["RegistersPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RegistersVisible {
            get {
                return ((bool)(this["RegistersVisible"]));
            }
            set {
                this["RegistersVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("219, 260")]
        public global::System.Drawing.Size RegistersSize {
            get {
                return ((global::System.Drawing.Size)(this["RegistersSize"]));
            }
            set {
                this["RegistersSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("252, 5")]
        public global::System.Drawing.Point LcdPos {
            get {
                return ((global::System.Drawing.Point)(this["LcdPos"]));
            }
            set {
                this["LcdPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("288, 192")]
        public global::System.Drawing.Size LcdSize {
            get {
                return ((global::System.Drawing.Size)(this["LcdSize"]));
            }
            set {
                this["LcdSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3, 392")]
        public global::System.Drawing.Point BreakpointsPos {
            get {
                return ((global::System.Drawing.Point)(this["BreakpointsPos"]));
            }
            set {
                this["BreakpointsPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool BreakpointsVisible {
            get {
                return ((bool)(this["BreakpointsVisible"]));
            }
            set {
                this["BreakpointsVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("549, 164")]
        public global::System.Drawing.Size BreakpointsSize {
            get {
                return ((global::System.Drawing.Size)(this["BreakpointsSize"]));
            }
            set {
                this["BreakpointsSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("282, 290")]
        public global::System.Drawing.Point VariablesPos {
            get {
                return ((global::System.Drawing.Point)(this["VariablesPos"]));
            }
            set {
                this["VariablesPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool VariablesVisible {
            get {
                return ((bool)(this["VariablesVisible"]));
            }
            set {
                this["VariablesVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("176, 109")]
        public global::System.Drawing.Size VariablesSize {
            get {
                return ((global::System.Drawing.Size)(this["VariablesSize"]));
            }
            set {
                this["VariablesSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AlwaysOnTop {
            get {
                return ((bool)(this["AlwaysOnTop"]));
            }
            set {
                this["AlwaysOnTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseLcdMemory {
            get {
                return ((bool)(this["UseLcdMemory"]));
            }
            set {
                this["UseLcdMemory"] = value;
            }
        }
    }
}
